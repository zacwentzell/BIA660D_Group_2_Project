from selenium import webdriver
from selenium.webdriver.support.select import Select
from selenium.webdriver.common.keys import Keys
#select works to select from an item
from selenium.webdriver import ActionChains
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
import selenium.webdriver.support.ui as ui
from selenium.webdriver.common.keys import Keys
from bs4 import BeautifulSoup as BS


# In[2]:


#To simulate the delay
import random
import time
start_time = time.time()
normal_delay = random.normalvariate(2, 0.5)
time.sleep(normal_delay)    
# print("--- %.5f seconds ---" % (time.time() - start_time))

def delay(t):
    normal_delay = random.normalvariate(t, 0.5)
    time.sleep(normal_delay)


# In[9]:


# Run the Chrome Driver
driver = webdriver.Chrome('D:\ChromeDriver\chromedriver.exe')


# In[10]:


# Let's go to Amazon product page
driver.get('https://www.amazon.com/COWIN-Cancelling-Headphones-Microphone-Comfortable/dp/B019U00D7K/ref=zg_bs_electronics_51?_encoding=UTF8&psc=1&refRID=H4R0ZZKXFYWRFTGZJ4SQ')
#We can get access the full page source with this line of code
"""
driver.page_source
"""
delay(2)


# In[11]:


# spot [see all customer reviews]
all_cust_reviews_div = driver.find_element_by_id('reviewSummary')
all_cust_reviews_link = driver.find_element_by_id('dp-summary-see-all-reviews')
all_cust_reviews_link.click()


# In[12]:


# current page to HTML
all_cust_reviews_page = driver.page_source
all_cust_reviews_soup = BS(all_cust_reviews_page, 'html5lib')


# In[13]:


# get div containing all reviews body
reviews_soup_div = all_cust_reviews_soup.find('div', attrs={'id':'cm_cr-review_list'})
reviews_soup_div_data = reviews_soup_div.find_all('div', attrs={'class': 'a-section review'})
num_of_reviews = len(reviews_soup_div_data)
# for loop through reviews_soup_div_data
score_list = []
title_list = []
review_list = []
for i in range(0, num_of_reviews):
    review = reviews_soup_div_data[i].find('div', attrs={'class': 'a-section celwidget'})
    # retrieve title score and append it to score_list
    score = review.find('a', attrs={'class': 'a-link-normal'})['title']
    score_list.append(score)
    # retrieve title and append it to title_list
    title = review.find('a', attrs={'data-hook': 'review-title'}).get_text()
    title_list.append(title)
    # get review data and store in review_list
    review_body = review.find('span', attrs={'data-hook': 'review-body'}).get_text()
    review_list.append(review_body)


# In[15]:


import pickle
print(len(review) )
with open('review_body.pickle', 'wb') as handle:
    pickle.dump(review_body, handle, protocol=pickle.HIGHEST_PROTOCOL)


# In[16]:


with open('review_body.pickle', 'rb') as handle:
    review = pickle.load(handle)
review


# In[17]:


score_list


# In[18]:


title_list 


# In[19]:


review_list


# In[20]:

import pandas as pd
headphone_data = pd.DataFrame({'Title':title_list,'Reviews':review_list,'Score':score_list})
headphone_data[:10]

# In[21]:

headphone_data.to_csv('D:/headphone_data.csv',columns=['Score','Title','Reviews'],index=False,sep=',')
